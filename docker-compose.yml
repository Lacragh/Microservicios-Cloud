version: "3.2"
######################## NETWORK ####################################################
networks:
  docker_network:
    driver: bridge
######################## FRONTEND ####################################################
services:
  frontend:
    image: 9805/frontend
    container_name: frontend
    build: ./frontend
    networks:
        - docker_network
    environment:
      PORT: 8080
      AUTH_API_ADDRESS: http://auth-api:8000
      TODOS_API_ADDRESS: http://todos-api:8082
      ZIPKIN_URL: http://zipkin:9411/api/v2/spans
    ports:
      - 8080:8080
    depends_on:
      - zipkin
      - auth-api
      - todos-api
      - users-api
      - elastic
      - kibana
######################## AUTH-API ####################################################
  auth-api:
    build: ./auth-api
    container_name: auth-api
    networks:
        - docker_network
    image: 9805/auth-api
    environment:
      AUTH_API_PORT: 8000
      JWT_SECRET: PRFT
      USERS_API_ADDRESS: http://users-api:8083
      ZIPKIN_URL: http://zipkin:9411/api/v2/spans
    depends_on:
      - zipkin
      - users-api
      - elastic
      - kibana
######################## TODOS-API ####################################################
  todos-api:
    build: ./todos-api
    container_name: todos-api
    image: 9805/todos-api
    networks:
        - docker_network
    environment:
      TODO_API_PORT: 8082
      JWT_SECRET: PRFT
      REDIS_HOST: redis-db
      REDIS_PORT: 6379
      REDIS_CHANNEL: log_channel
      ZIPKIN_URL: http://zipkin:9411/api/v2/spans
    depends_on:
      - zipkin
      - redis-db
      - elastic
      - kibana
######################## USERS-API ####################################################
  users-api:
    build: ./users-api
    container_name: users-api
    networks:
        - docker_network
    image: 9805/users-api
    environment:
     SERVER_PORT: 8083
     JWT_SECRET: PRFT
     SPRING_ZIPKIN_BASE_URL: http://zipkin:9411
    depends_on:
      - zipkin
      - elastic
      - kibana
######################## LOG-MESSAGE-PROCESSOR ####################################################     
  log-message-processor:
    container_name: log-message-processor
    networks:
        - docker_network
    build: ./log-message-processor
    image: 9805/log-message-processor
    environment:
      REDIS_HOST: redis-db
      REDIS_PORT: 6379
      REDIS_CHANNEL: log_channel
      ZIPKIN_URL: http://zipkin:9411/api/v1/spans
    depends_on:
      - zipkin
      - redis-db
      - elastic
      - kibana
######################## ZIPKIN ####################################################  
  zipkin:
    container_name: zipkin
    networks:
        - docker_network
    image: openzipkin/zipkin
    ports:
      - 9411:9411
    depends_on:
      - elastic
      - kibana
######################## REDIS-DB ####################################################
  redis-db:
    container_name: redis-db
    networks:
        - docker_network
    image: redis:7.0
    depends_on:
      - elastic
      - kibana
######################## ELASTIC ################## ******************* #########################################################################################################
  elastic:
    container_name: elastic
    image: elasticsearch:7.17.0
    environment:
      discovery.type: single-node
    volumes:
    - elastic_data:/usr/share/elasticsearch/data/
    networks:
        - docker_network
    restart: always
    ports:
      - 9200:9200
      - 9300:9300
######################## KIBANA ####################################################
  kibana:
    image: kibana:7.17.0
    container_name: kibana
    environment:
      xpack.monitoring.ui.enabled: "true"
      xpack.monitoring.enabled: "true"
      xpack.monitoring.elasticsearch.hosts: http://elastic:9200
      logging.verbose: "true"
      ELASTICSEARCH_HOSTS: http://elastic:9200
    healthcheck:
        test: ["CMD", "curl", "-f", "kibana:5601"]
        interval: 50s
        timeout: 50s
        retries: 5
    networks:
        - docker_network
    ports:
      - 5601:5601
    depends_on:
      - elastic
######################## LOGSTASH ####################################################
  logstash:
    container_name: logstash
    image: logstash:7.9.2
    ports:
      - '5400:5400'
    networks:
        - docker_network
    volumes:
        - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro 
        - ./logstash/logstash.yaml:/usr/share/logstash/config/logstash.yml:ro
    depends_on:
      - kibana
######################## FILEBEAT ####################################################
  filebeat:
      user: root
      container_name: filebeat
      command: --strict.perms=false
      volumes:
          - ./filebeat/filebeat.docker.yaml:/usr/share/filebeat/filebeat.yml:ro
          - /var/lib/docker/containers:/var/lib/docker/containers:ro
          - /var/run/docker.sock:/var/run/docker.sock:ro
      #   - /home/lian/ELK/1 Introduction and Installation/dockerComposeJavaApp/data:/usr/share/filebeat/data:rw
      image: docker.elastic.co/beats/filebeat:7.17.0
      depends_on:   
          - kibana
      networks:
          - docker_network  
######################## VOLUMES ####################################################
volumes:
  elastic_data:

